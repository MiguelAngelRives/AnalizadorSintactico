# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMRESleftPRDDIVANGULO COMA COMENT CORDER CORIZQ CRUZ CRUZ_V DER DIV ID IGL IMPRIMIR INTGR MAGNITUD MAG_V MGN MULTIPLICA NORMALIZA NORM_V NUM PARDER PARIZQ PNTCOM PRC PRD PRP PUNT PUNTO RES RESTA RES_V SUM SUMA SUM_V TEXTO VALI VECTORexpression : VALI PARIZQ VECTOR NUM PARDER PNTCOMexpression : VECTOR NUM IGL CORIZQ NUM COMA NUM CORDER PNTCOMexpression : IMPRIMIR PARIZQ TEXTO PARDER PNTCOMexpression : IMPRIMIR PARIZQ CRUZ_V PARDER PNTCOMexpression : IMPRIMIR PARIZQ SUM_V PARDER PNTCOMexpression : SUM_V IGL PARIZQ VECTOR NUM SUM VECTOR NUM PARDER PNTCOMexpression : RES_V IGL PARIZQ VECTOR NUM RES VECTOR NUM PARDER PNTCOMexpression : CRUZ_V IGL PARIZQ VECTOR CORIZQ NUM CORDER PRD VECTOR CORIZQ NUM CORDER RES VECTOR CORIZQ NUM CORDER PRD VECTOR CORIZQ NUM CORDER PARDER PNTCOMexpression : VECTOR NUM IGL CORIZQ NUM CORDER PNTCOMexpression : NORM_V IGL NORMALIZA VECTOR NUM PNTCOM'

_lr_action_items = {'VALI': ([0, ], [2, ]), 'VECTOR': (
[0, 9, 21, 22, 23, 24, 47, 48, 56, 68, 73, ], [3, 16, 30, 31, 32, 33, 53, 54, 60, 69, 74, ]),
                    'IMPRIMIR': ([0, ], [4, ]), 'SUM_V': ([0, 11, ], [6, 20, ]), 'RES_V': ([0, ], [7, ]),
                    'CRUZ_V': ([0, 11, ], [5, 19, ]), 'NORM_V': ([0, ], [8, ]), '$end': (
    [1, 36, 37, 38, 43, 49, 51, 59, 64, 65, 79, ], [0, -3, -4, -5, -1, -10, -9, -2, -6, -7, -8, ]),
                    'PARIZQ': ([2, 4, 12, 13, 14, ], [9, 11, 21, 22, 23, ]), 'NUM': (
    [3, 16, 26, 31, 32, 33, 39, 44, 53, 54, 63, 70, 75, ], [10, 25, 35, 40, 41, 42, 46, 50, 57, 58, 66, 71, 76, ]),
                    'IGL': ([5, 6, 7, 8, 10, ], [12, 13, 14, 15, 17, ]), 'TEXTO': ([11, ], [18, ]),
                    'NORMALIZA': ([15, ], [24, ]), 'CORIZQ': ([17, 30, 60, 69, 74, ], [26, 39, 63, 70, 75, ]),
                    'PARDER': ([18, 19, 20, 25, 57, 58, 77, ], [27, 28, 29, 34, 61, 62, 78, ]),
                    'PNTCOM': ([27, 28, 29, 34, 42, 45, 55, 61, 62, 78, ], [36, 37, 38, 43, 49, 51, 59, 64, 65, 79, ]),
                    'COMA': ([35, ], [44, ]), 'CORDER': ([35, 46, 50, 66, 71, 76, ], [45, 52, 55, 67, 72, 77, ]),
                    'SUM': ([40, ], [47, ]), 'RES': ([41, 67, ], [48, 68, ]), 'PRD': ([52, 72, ], [56, 73, ]), }

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:  _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression': ([0, ], [1, ]), }

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto: _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> expression", "S'", 1, None, None, None),
    ('expression -> VALI PARIZQ VECTOR NUM PARDER PNTCOM', 'expression', 6, 'p_expression_vali', 'main.py', 12),
    ('expression -> VECTOR NUM IGL CORIZQ NUM COMA NUM CORDER PNTCOM', 'expression', 9, 'p_expression_llenar_v',
     'main.py', 16),
    ('expression -> IMPRIMIR PARIZQ TEXTO PARDER PNTCOM', 'expression', 5, 'p_expression_imprimir', 'main.py', 20),
    ('expression -> IMPRIMIR PARIZQ CRUZ_V PARDER PNTCOM', 'expression', 5, 'p_expression_imprimir_cruz_v', 'main.py',
     24),
    (
    'expression -> IMPRIMIR PARIZQ SUM_V PARDER PNTCOM', 'expression', 5, 'p_expression_imprimir_sum_v', 'main.py', 28),
    ('expression -> SUM_V IGL PARIZQ VECTOR NUM SUM VECTOR NUM PARDER PNTCOM', 'expression', 10, 'p_expression_sum_v',
     'main.py', 32),
    ('expression -> RES_V IGL PARIZQ VECTOR NUM RES VECTOR NUM PARDER PNTCOM', 'expression', 10, 'p_expression_res_v',
     'main.py', 36),
    (
    'expression -> CRUZ_V IGL PARIZQ VECTOR CORIZQ NUM CORDER PRD VECTOR CORIZQ NUM CORDER RES VECTOR CORIZQ NUM CORDER PRD VECTOR CORIZQ NUM CORDER PARDER PNTCOM',
    'expression', 24, 'p_expression_cruz_v', 'main.py', 40),
    (
    'expression -> VECTOR NUM IGL CORIZQ NUM CORDER PNTCOM', 'expression', 7, 'p_expression_vector_posicion', 'main.py',
    44),
    ('expression -> NORM_V IGL NORMALIZA VECTOR NUM PNTCOM', 'expression', 6, 'p_expression_vector_norm_v', 'main.py',
     48),
]
